<?xml version="1.0" encoding="UTF-8"?>
<faqs
  title="SchemaCrawler - Frequently Asked Questions"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="http://maven.apache.org/reference/plugins/faq/faq.xsd">
  <part id="general">
    <title>General</title>
    <faq id="whats-schemacrawler">
      <question>
        <span>What is SchemaCrawler?</span>
      </question>
      <answer>
        <p>
          SchemaCrawler is a command-line tool, written in Java to
          output your database schema and data in a human readable form.
          SchemaCrawler output is designed to be diff-ed with previous
          versions of your database schema or data.
        </p>
      </answer>
    </faq>
    <faq id="output">
      <question>
        <span>What does SchemaCrawler output look like?</span>
      </question>
      <answer>
        <p>
          SchemaCrawler can produce plain text output, XHTML, or
          comma-separated text (CSV). The XHTML output is a combination
          of valid XML (that can be manipulated by XML tools or XSLT),
          and HTML that can be viewed in a browser.
        </p>
        <ul>
          <li>
            <a href="snapshot-examples/snapshot.txt">
              Schema in text format
            </a>
          </li>
          <li>
            <a href="snapshot-examples/snapshot.html">
              Schema in HTML format
            </a>
          </li>
          <li>
            <a href="snapshot-examples/snapshot.csv">
              Schema in CSV format
            </a>
          </li>
        </ul>
      </answer>
    </faq>
    <faq id="commands">
      <question>
        <span>What are the SchemaCrawler commands?</span>
      </question>
      <answer>
        <p>
          SchemaCrawler can produce brief, basic, or verbose details of
          your schema. The brief option gives you just table, view, and
          procedure names. The basic option gives you the column names
          and data types. The verbose option will give you details of
          indices, primary and foreign keys. Each successive option
          takes more time to execute.
        </p>
        <p>
          SchemaCrawler can also manipulate your data. You can get
          counts of the rows in tables and views, or you can truncate or
          drop tables and views. SchemaCrawler can output all the data
          in your tables and views, or run specific SQL statements
          against table and views. SchemaCrawler can be fine-tuned using
          configuration files.
        </p>
        <source>
          <![CDATA[java -jar <schemacrawler-jar> [options]

--- Optional Configuration Options ---

-g <config-file> (short for -configfile <config-file>)
    Reads SchemaCrawler configuration properties from <config-file> instead
    of the default schemacrawler.config.properties

-p <config-override-file> (short for -configoverridefile <config-override-file>)
    Reads SchemaCrawler configuration properties from <config-override-file>
    and overrides the properties from the configuration file

--- Required Connection Options ---

One of:

-c <connection_name> (short for -connection <connection_name>)
    Uses a named connection
    
-d (short for -default)
    Uses the default connection
    
-x <connection_name> (short for -prompt <connection_name>)
    Prompts for connection information, which is saved
    into <connection_name>.properties
    
-a (short for -testall)
    Tests all the connections defined in the configuration properties file,
    but does not execute any commands

--- Command Options ---

-command=<command>
	Required, where <command> is a comma-separated list of:
    brief_schema
        If you only want to see table and view names
    basic_schema
        For more details of tables and views
    verbose_schema
        For most details of tables and views, including keys
    maximum_schema
        For maximum possible detail of the schema
    count
        To count rows in the tables
    truncate
        To truncate the tables
    drop
        To drop the tables
    dump
    	To select all rows from the tables, and output the data
    <query_name>
	    Query name, as specified in the configuration properties file
			The query itself can contain the variables ${table} and ${tabletype}
			or system properties referenced as ${<system-property-name>}.
			Queries without any variables are executed exactly once. Queries
			with variables are executed once for each table, with the variables
			substituted.

--- Output Options ---

-outputformat=<outputformat>
	Optional, where <outputformat> is one of:
    text
        For text output (default)
    html
        For XHTML output
    csv
        For CSV output

-outputfile=<outputfile>
	Optional - <outputfile> is the path to the output file
]]>
        </source>
      </answer>
    </faq>
  </part>
  <part id="supported-platforms">
    <title>Supported Platforms</title>
    <faq id="supported-databases">
      <question>
        <span>What databases does SchemaCrawler work with?</span>
      </question>
      <answer>
        <p>
          SchemaCrawler supports any database for which there is a JDBC
          database driver available. SchemaCrawler has been tested with
          various databases, and JDBC drivers.
        </p>
      </answer>
    </faq>
    <faq id="supported-java">
      <question>
        <span>What Java version does SchemaCrawler work with?</span>
      </question>
      <answer>
        <p>
          SchemaCrawler works with J2SE 1.4 and above. SchemaCrawler
          does not depend on any Java libraries other than the standard
          J2SE 1.4 runtime libraries and a JDBC driver.
        </p>
      </answer>
    </faq>
    <faq id="supported-os">
      <question>
        <span>
          What operating systems does SchemaCrawler work with?
        </span>
      </question>
      <answer>
        <p>
          SchemaCrawler works with any operating system that supports
          J2SE 1.4 and above.
        </p>
      </answer>
    </faq>
    <faq id="ant">
      <question>
        <span>Can SchemaCrawler be used with ant?</span>
      </question>
      <answer>
        <p>Yes, SchemaCrawler comes with a full-featured ant task.</p>
        <p>
          <i>
            See the example in the
            <code>_distrib\examples\ant-task</code>
            directory.
          </i>
        </p>
      </answer>
    </faq>
    <faq id="maven">
      <question>
        <span>Can SchemaCrawler be used with Maven?</span>
      </question>
      <answer>
        <p>
          Yes, SchemaCrawler comes with a Maven plug-in. You can
          generate a SchemaCrawler report along with other reports for
          your Maven generated site.
        </p>
        <p>
          <i>
            See the example in the
            <code>_distrib\examples\maven</code>
            directory.
          </i>
        </p>
      </answer>
    </faq>
    <faq id="api">
      <question>
        <span>Can SchemaCrawler be used programmatically?</span>
      </question>
      <answer>
        <p>
          SchemaCrawler is also an API that improves on the standard
          JDBC metadata facilities. SchemaCrawler provides an easy to
          use set of plain old Java objects (POJOs) that represent your
          database schema. SchemaCrawler also provides an API to create
          connections (a data-source) to a database using properties
          files.
        </p>
        <p>
          Read
          <a href="http://www.devx.com/Java/Article/32443">
            Java API Makes Database Metadata as Easily Accessible as
            POJOs
          </a>
          for an introduction to the SchemaCrawler API.
        </p>
        <p>
          <i>
            See the example in the
            <code>_distrib\examples\api</code>
            directory.
          </i>
        </p>
      </answer>
    </faq>
    <faq id="integrations">
      <question>
        <span>
          Can SchemaCrawler be used integrated with other programs?
        </span>
      </question>
      <answer>
        <p>
          SchemaCrawler can be integrated with other programs, but this
          requires some Java programming. From version 3.8,
          SchemaCrawler comes pre-built with integration with
          <a href="http://jakarta.apache.org/velocity/">Velocity</a>
          . This allows you to specify your own templates for formatting
          the schema. Examples are provided in the _distrib directory.
          There is also integration with
          <a href="http://jung.sourceforge.net/">JUNG</a>
          for creating graph JPEG files.
        </p>
      </answer>
    </faq>
  </part>
  <part id="distribution">
    <title>Distribution</title>
    <faq id="availibility">
      <question>
        <span>Where is SchemaCrawler available?</span>
      </question>
      <answer>
        <p>
          SchemaCrawler is available as a download from
          <a
            href="https://sourceforge.net/project/showfiles.php?group_id=148383">
            SourceForge
          </a>
          .
        </p>
      </answer>
    </faq>
    <faq id="tech-support">
      <question>
        <span>Is technical support available?</span>
      </question>
      <answer>
        <p>
          Technical support is not available for SchemaCrawler. Please
          post questions on the forums.
        </p>
      </answer>
    </faq>
    <faq id="cost">
      <question>
        <span>Is SchemaCrawler free?</span>
      </question>
      <answer>
        <p>
          SchemaCrawler is free, but
          <a
            href="http://sourceforge.net/donate/index.php?group_id=148383">
            donations
          </a>
          are welcome.
        </p>
      </answer>
    </faq>
  </part>
</faqs>
